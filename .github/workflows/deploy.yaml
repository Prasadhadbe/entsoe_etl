name: Deploy to Azure AKS

on:
  push:
    branches:
      - main

env:
  ACR_NAME: airflowacr26970
  AKS_RESOURCE_GROUP: airflow-rg
  AKS_CLUSTER_NAME: airflow-aks
  IMAGE_NAME: airflow
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build and Push Docker Image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG -f Dockerfile .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

      - name: Replace image tag in deployments
        run: |
          sed -i "s|$ACR_NAME.azurecr.io/airflow:.*|$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG|g" k8s/airflow-webserver-deployment.yaml
          sed -i "s|$ACR_NAME.azurecr.io/airflow:.*|$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG|g" k8s/airflow-scheduler-deployment.yaml
          sed -i "s|$ACR_NAME.azurecr.io/airflow:.*|$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG|g" k8s/airflow-init-job.yaml

      - name: Apply Namespace first
        run: |
          kubectl apply -f k8s/airflow-namespace.yaml
          echo "Waiting 5 seconds for namespace to be registered..."
          sleep 5

      - name: Apply rest of manifests
        run: |
          kubectl apply -f k8s/

      - name: Wait for Airflow Webserver Pod
        run: |
          echo "Waiting for webserver pod to be ready..."
          kubectl wait pod -n airflow \
            --for=condition=Ready \
            -l app=airflow-webserver \
            --timeout=300s || {
              echo "Webserver pod didn't become ready in time. Printing debug logs:"
              kubectl get pods -n airflow
              kubectl describe pods -n airflow
              exit 1
            }

      - name: Get Webserver Pod Name
        id: get-pod
        run: |
          POD_NAME=$(kubectl get pods -n airflow -l app=airflow-webserver -o jsonpath="{.items[0].metadata.name}")
          echo "Using pod: $POD_NAME"
          echo "pod_name=$POD_NAME" >> $GITHUB_OUTPUT

      - name: Copy DAGs to Pod
        run: |
          kubectl cp ./dags ${{ steps.get-pod.outputs.pod_name }}:/opt/airflow/ -c webserver

      - name: Restart Airflow Scheduler
        run: |
          kubectl rollout restart deployment airflow-scheduler
